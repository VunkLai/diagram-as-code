[tool.poetry]
name = "workshop"
version = "0.1.0"
description = ""
authors = ["vunk.lai <vunk.lai@zyxel.com.tw>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
ipython = "^8.17.2"
# fomat
black = "^23.11.0"
isort = "^5.12.0"
# linting
pylint = "^3.0.2"
pylint-django = "^2.5.5"
mypy = "^1.7.0"
# test
pytest = "^7.4.3"
pytest-django = "^4.7.0"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"
faker = "^21.0.0"
# security
bandit = {extras = ["toml"], version = "^1.7.5"}
safety = "^2.3.5"

[tool.isort]
profile = "black"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
skip = "migrations"

[tool.pylint.main]
load-plugins = [
]
ignore = [
]
ignore-patterns = [
]

[tool.pylint.messages_control]
disable = [
  "missing-module-docstring",
  "missing-class-docstring",
  "missing-function-docstring",
  "too-few-public-methods",
  "no-member",
  "fixme",
  "arguments-differ",
  "invalid-str-returned",
  "too-many-ancestors",
]

[tool.pylint.basic]
good-names = [
  "pk",
  "_"
]

[tool.mypy]
ignore_missing_imports = true
exclude = [
]

[tool.pytest.ini_options]
python_files = ['tests.py', 'test_*.py']

[tool.bandit]
skips = ["B101"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
